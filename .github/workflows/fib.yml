name: Zadanie 1 punkt 3

on:
  workflow_dispatch:
  push:
    branches: ['main']
    tags:
      - 'v*.*.*'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  GHCR_IMAGE_NAME: Kamiliush/fib_calc
  # dockerhub.repository
  DH_IMAGE_NAME: kamiliusz/fib_calc


jobs:
  build-and-push:
    name: Budowanie obrazu na węźle runner
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repozytorium
        uses: actions/checkout@v3
        
      - name: Inicjalizacja QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: amd64,arm64

      - name: Inicjalizacja buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          platforms: linux/amd64,linux/arm64

      - name: Logowanie do repozytorium ${{ env.REGISTRY }}
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Logowanie do repozytorium DorkerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Obsługa metadanych
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      # https://github.com/docker/build-push-action
      - name: Budowanie obrazu i wypchnięcie go do repozytorium
        id: build-and-push
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=docker.io/${{ env.DH_IMAGE_NAME }}:z1_cache
          cache-to: type=registry,mode=max,ref=docker.io/${{ env.DH_IMAGE_NAME }}:z1_cache
          platforms: linux/amd64,linux/arm64

